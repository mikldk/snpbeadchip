// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// to_plus_minus
Rcpp::CharacterVector to_plus_minus(Rcpp::CharacterVector AB, Rcpp::CharacterVector SNP1, Rcpp::CharacterVector SNP2, Rcpp::CharacterVector illumina_strand, Rcpp::CharacterVector sep);
RcppExport SEXP _snpbeadchip_to_plus_minus(SEXP ABSEXP, SEXP SNP1SEXP, SEXP SNP2SEXP, SEXP illumina_strandSEXP, SEXP sepSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type AB(ABSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type SNP1(SNP1SEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type SNP2(SNP2SEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type illumina_strand(illumina_strandSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type sep(sepSEXP);
    rcpp_result_gen = Rcpp::wrap(to_plus_minus(AB, SNP1, SNP2, illumina_strand, sep));
    return rcpp_result_gen;
END_RCPP
}
// call_alleles_ab_compare_engine
Rcpp::List call_alleles_ab_compare_engine(Rcpp::ListOf<DataFrame>& d_lst, double cutoff, int nc_int_thres, double nc_snr_thres, int nc_sd_thres, int nc_nbeads_thres);
RcppExport SEXP _snpbeadchip_call_alleles_ab_compare_engine(SEXP d_lstSEXP, SEXP cutoffSEXP, SEXP nc_int_thresSEXP, SEXP nc_snr_thresSEXP, SEXP nc_sd_thresSEXP, SEXP nc_nbeads_thresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ListOf<DataFrame>& >::type d_lst(d_lstSEXP);
    Rcpp::traits::input_parameter< double >::type cutoff(cutoffSEXP);
    Rcpp::traits::input_parameter< int >::type nc_int_thres(nc_int_thresSEXP);
    Rcpp::traits::input_parameter< double >::type nc_snr_thres(nc_snr_thresSEXP);
    Rcpp::traits::input_parameter< int >::type nc_sd_thres(nc_sd_thresSEXP);
    Rcpp::traits::input_parameter< int >::type nc_nbeads_thres(nc_nbeads_thresSEXP);
    rcpp_result_gen = Rcpp::wrap(call_alleles_ab_compare_engine(d_lst, cutoff, nc_int_thres, nc_snr_thres, nc_sd_thres, nc_nbeads_thres));
    return rcpp_result_gen;
END_RCPP
}
// call_alleles_ab_engine
Rcpp::List call_alleles_ab_engine(Rcpp::ListOf<DataFrame>& d_lst, double cutoff, int nc_int_thres, double nc_snr_thres, int nc_sd_thres, int nc_nbeads_thres);
RcppExport SEXP _snpbeadchip_call_alleles_ab_engine(SEXP d_lstSEXP, SEXP cutoffSEXP, SEXP nc_int_thresSEXP, SEXP nc_snr_thresSEXP, SEXP nc_sd_thresSEXP, SEXP nc_nbeads_thresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ListOf<DataFrame>& >::type d_lst(d_lstSEXP);
    Rcpp::traits::input_parameter< double >::type cutoff(cutoffSEXP);
    Rcpp::traits::input_parameter< int >::type nc_int_thres(nc_int_thresSEXP);
    Rcpp::traits::input_parameter< double >::type nc_snr_thres(nc_snr_thresSEXP);
    Rcpp::traits::input_parameter< int >::type nc_sd_thres(nc_sd_thresSEXP);
    Rcpp::traits::input_parameter< int >::type nc_nbeads_thres(nc_nbeads_thresSEXP);
    rcpp_result_gen = Rcpp::wrap(call_alleles_ab_engine(d_lst, cutoff, nc_int_thres, nc_snr_thres, nc_sd_thres, nc_nbeads_thres));
    return rcpp_result_gen;
END_RCPP
}
// channel_probe_to_alleles_engine
Rcpp::List channel_probe_to_alleles_engine(Rcpp::DataFrame& d, size_t top_n);
RcppExport SEXP _snpbeadchip_channel_probe_to_alleles_engine(SEXP dSEXP, SEXP top_nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame& >::type d(dSEXP);
    Rcpp::traits::input_parameter< size_t >::type top_n(top_nSEXP);
    rcpp_result_gen = Rcpp::wrap(channel_probe_to_alleles_engine(d, top_n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_snpbeadchip_to_plus_minus", (DL_FUNC) &_snpbeadchip_to_plus_minus, 5},
    {"_snpbeadchip_call_alleles_ab_compare_engine", (DL_FUNC) &_snpbeadchip_call_alleles_ab_compare_engine, 6},
    {"_snpbeadchip_call_alleles_ab_engine", (DL_FUNC) &_snpbeadchip_call_alleles_ab_engine, 6},
    {"_snpbeadchip_channel_probe_to_alleles_engine", (DL_FUNC) &_snpbeadchip_channel_probe_to_alleles_engine, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_snpbeadchip(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
